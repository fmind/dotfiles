# vim: filetype=python foldmethod=marker

# BYOBU {{{
if "TMUX" not in ${...} and \
   "BYOBU_SOURCED" not in ${...}:
    from sys import exit
    $BYOBU_SOURCED = 1
    byobu-launcher
    exit(0)
# }}}
# IMPORTS {{{
import os
import re
import sys
import json
# }}}
# ALIASES {{{
aliases["pvl"] = "vox list"
aliases["pvd"] = "vox deactivate"
aliases["pvc"] = "vox create $BASEDIR"
aliases["pvr"] = "vox remove $BASEDIR"
aliases["pva"] = "vox activate $BASEDIR"
aliases["pve"] = 'echo "vox activate $BASEDIR" > .autoxsh'
# }}}
# COMMANDS {{{
def note(args):
    $[$EDITOR @("note:{file}".format(file=args[0]))]


def gitea(args):
    $[git clone @("ssh://gitea@git.fmind.me/fmind/{repo}".format(repo=args[0]))]


def github(args):
    $[git clone @("ssh://git@github.com/fmind/{repo}".format(repo=args[0]))]


def projections(args):
    base= $BASEDIR

    sources = {
        "{}/*.py".format(base): {"alternate": "{}/tests/test_{{}}.py".format(base), "type": "test"},
        "{}/tests/test_*.py".format(base): {"alternate": "{}/{{}}.py".format(base), "type": "source"},
    }

    with open(".projections.json", "w") as w:
        json.dump(sources, w, indent=2)

    return 0


aliases["note"] = note
aliases["gitea"] = gitea
aliases["github"] = github
aliases["project"] = projections
# }}}
# SETTINGS {{{
$VI_MODE = True
$AUTO_CD = True
$AUTO_PUSHD = True
$AUTO_SUGGEST = True
$XONSH_AUTOPAIR = True
$XONSH_SHOW_TRACEBACK = True

$PATHEXT = [".py", ".sh", ".xsh"]

$PROMPT = "{env_name:{} }üêç {INTENSE_RED}{user} {NO_COLOR}" + \
          "at {INTENSE_GREEN}{hostname} {NO_COLOR}" + \
          "in {INTENSE_BLUE}{cwd_base}{branch_color}" + \
          "{curr_branch: {}}{NO_COLOR} {prompt_end} "
# }}}
# TRIGGERS {{{
@events.on_chdir
def listdir(olddir, newdir):
    $[ls]

@events.on_chdir
def basedir(olddir, newdir):
    $BASEDIR = os.path.basename(newdir)

basedir($PWD, $PWD)
# }}}
# XONTRIBS {{{
xontrib load vox
xontrib load autoxsh
xontrib load aliastips
xontrib load simplejump
# }}}
# CONFIGURATIONS {{{
if os.path.exists(os.path.expanduser("~/.aliases")):
    $[source-bash --overwrite-alias ~/.aliases]
if os.path.exists(os.path.expanduser("~/.environ")):
    $[source-bash --overwrite-alias ~/.environ]
if os.path.exists(os.path.expanduser("~/.private")):
    $[source-bash --overwrite-alias ~/.private]
if "DISPLAY" in ${...} and \
   os.path.exists(os.path.expanduser("~/.display")):
    $[source-bash --overwrite-alias ~/.display]
# }}}
