---

- hosts: localhost

  tasks:

# INIT{{{
  - name: install pip3
    package: name='python3-pip'
    tags: ['sys', 'init']
    become: true

  - name: create ~/bin
    file: name='~/bin' state='directory'
    tags: ['usr', 'init']
# }}}
# VIM{{{
  - name: install vim
    package: name='vim'
    tags: ['sys', 'vim']
    become: true

  - name: create vim dir
    file: path='~/.vim/' state=directory
    tags: ['usr', 'vim']

  - name: deploy vim conf
    file: src='{{playbook_dir}}/vim/vimrc' dest='~/.vimrc' state=link force=yes
    tags: ['usr', 'vim']

  - name: create vim subdir
    file: path='~/.vim/{{item}}/' state=directory
    with_items:
      - undo
      - swap
      - spell
      - backup
      - session
      - plugged
      - autoload
    tags: ['usr', 'vim']

  - name: install vim manager
    get_url: url='https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim' dest='~/.vim/autoload/plug.vim' mode=0600
    tags: ['usr', 'vim']
# }}}
# EMACS{{{
  - name: install emacs
    package: name='emacs-nox'
    tags: ['sys', 'emacs']
    become: true

  - name: deploy emacs dir
    file: src='{{playbook_dir}}/emacs/spacemacs.d' dest='~/.spacemacs.d' state=link force=yes
    tags: ['usr', 'emacs']

  - name: deploy emacs conf
    file: src='{{playbook_dir}}/emacs/spacemacs' dest='~/.spacemacs' state=link force=yes
    tags: ['usr', 'emacs']

  - name: clone emacs spacemacs
    git: repo='https://github.com/syl20bnr/spacemacs' dest='~/.emacs.d' depth=1
    tags: ['usr', 'emacs']
# }}}
# ZSH {{{
  - name: install zsh
    package: name='zsh'
    tags: ['sys', 'zsh']
    become: true

  - name: create zsh dir
    file: name='{{item}}' state='directory'
    with_items:
      - ~/.zsh.d/
      - ~/.zsh.d/themes
      - ~/.zsh.d/plugins
    tags: ['usr', 'zsh']

  - name: deploy zsh conf
    file: src='{{playbook_dir}}/zsh/zshrc' dest='~/.zshrc' state=link force=yes
    tags: ['usr', 'zsh']

  - name: clone zsh theme
    git: repo='https://github.com/denysdovhan/spaceship-prompt.git' dest='~/.zsh.d/themes/spaceship-prompt' depth=1
    tags: ['usr', 'zsh']

  - name: link zsh theme
    file: src='~/.zsh.d/themes/spaceship-prompt/spaceship.zsh-theme' dest='~/.zsh.d/themes/spaceship.zsh-theme' state=link force=yes
    tags: ['usr', 'zsh']

  - name: clone zsh oh-my-zsh
    git: repo='https://github.com/robbyrussell/oh-my-zsh.git' dest='~/.oh-my-zsh' depth=1
    tags: ['usr', 'zsh']

  - name: clone zsh auto-pair
    git: repo='https://github.com/hlissner/zsh-autopair.git' dest='~/.zsh.d/plugins/zsh-autopair' depth=1
    tags: ['usr', 'zsh']

  - name: clone zsh alias-tips
    git: repo='https://github.com/djui/alias-tips.git' dest='~/.zsh.d/plugins/alias-tips' depth=1
    tags: ['usr', 'zsh']

  - name: clone zsh zsh-completions
    git: repo='https://github.com/zsh-users/zsh-completions' dest='~/.zsh.d/plugins/zsh-completions' depth=1
    tags: ['usr', 'zsh']

  - name: clone zsh auto-suggestions
    git: repo='git://github.com/zsh-users/zsh-autosuggestions.git' dest='~/.zsh.d/plugins/zsh-autosuggestions' depth=1
    tags: ['usr', 'zsh']

  - name: clone zsh syntax-highlighting
    git: repo='https://github.com/zsh-users/zsh-syntax-highlighting.git' dest='~/.zsh.d/plugins/zsh-syntax-highlighting' depth=1
    tags: ['usr', 'zsh']
# }}}
# BASH{{{
  - name: deploy bash conf
    file: src='{{playbook_dir}}/bash/bashrc' dest='~/.bashrc' state=link force=yes
    tags: ['usr', 'bash']
# }}}
# BYOBU {{{
  - name: install tmuxp
    pip: name='tmuxp' executable='pip3' extra_args='--user'
    tags: ['usr', 'tmux']

  - name: deploy tmuxp dir
    file: src='{{playbook_dir}}/tmuxp' dest='~/.tmuxp' state=link force=yes
    tags: ['usr', 'tmux']

  - name: install byobu
    package: name='byobu'
    tags: ['sys', 'tmux']
    become: true

  - name: create byobu dir
    file: path='~/.byobu' state=directory
    tags: ['usr', 'tmux']

  - name: deploy byobu conf
    file: src='{{playbook_dir}}/byobu/{{item}}' dest='~/.byobu/{{item}}' state=link force=yes
    with_items:
      - status
      - backend
      - statusrc
      - .tmux.conf
      - keybindings.tmux
    tags: ['usr', 'tmux']
# }}}
# SHELL {{{
  - name: deploy shell input
    file: src='{{playbook_dir}}/shell/inputrc' dest='~/.inputrc' state=link force=yes
    tags: ['usr', 'shell']

  - name: deploy shell aliases
    file: src='{{playbook_dir}}/shell/aliases' dest='~/.aliases' state=link force=yes
    tags: ['usr', 'shell']

  - name: deploy shell display
    file: src='{{playbook_dir}}/shell/display' dest='~/.display' state=link force=yes
    tags: ['usr', 'shell']

  - name: deploy shell environ
    file: src='{{playbook_dir}}/shell/environ' dest='~/.environ' state=link force=yes
    tags: ['usr', 'shell']
# }}}
# ADMIN{{{
  - name: install at
    package: name='at'
    tags: ['sys', 'admin']
    ignore_errors: true
    become: true

  - name: install htop
    package: name='htop'
    tags: ['sys', 'admin']
    ignore_errors: true
    become: true

  - name: install ncdu
    package: name='ncdu'
    tags: ['sys', 'admin']
    ignore_errors: true
    become: true

  - name: install ansible
    package: name='ansible'
    tags: ['sys', 'admin']
    become: true

  - name: deploy ansible conf
    file: src='{{playbook_dir}}/ansible/ansible.cfg' dest='~/.ansible.cfg' state=link force=yes
    tags: ['usr', 'admin']

  - name: install pydf
    pip: name='pydf' executable='pip3' extra_args='--user'
    tags: ['usr', 'admin']

  - name: install glances
    pip: name='glances' executable='pip3' extra_args='--user'
    tags: ['usr', 'admin']

  - name: install termtosvg
    pip: name='termtosvg' executable='pip3' extra_args='--user'
    tags: ['usr', 'admin']
# }}}
# SYSTEM {{{
  - name: install fasd
    package: name='fasd'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: install pigz
    package: name='pigz'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: install ranger
    package: name='ranger'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: install parallel
    package: name='parallel'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: install imagemagick
    package: name='imagemagick'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: install silversearcher
    package: name='silversearcher-ag'
    tags: ['sys', 'system']
    ignore_errors: true
    become: true

  - name: deploy silversearcher conf
    file: src='{{playbook_dir}}/silversearcher/agignore' dest='~/.agignore' state=link force=yes
    tags: ['usr', 'system']

  - name: install tldr
    pip: name='tldr' executable='pip3' extra_args='--user'
    tags: ['usr', 'system']

  - name: install onset
    pip: name='onset' executable='pip3' extra_args='--user'
    tags: ['usr', 'system']
# }}}
# NETWORK{{{
  - name: install curl
    package: name='curl'
    tags: ['sys', 'network']
    become: true

  - name: install ipcalc
    package: name='ipcalc'
    tags: ['sys', 'network']
    ignore_errors: true
    become: true

  - name: install httpie
    pip: name='httpie' executable='pip3' extra_args='--user'
    tags: ['usr', 'network']

  - name: install httpie prompt
    pip: name='http-prompt' executable='pip3' extra_args='--user'
    tags: ['usr', 'network']
# }}}
# PROCESS{{{
  - name: install pv
    package: name='pv'
    tags: ['sys', 'process']
    ignore_errors: true
    become: true

  - name: install jq
    package: name='jq'
    tags: ['sys', 'process']
    ignore_errors: true
    become: true

  - name: install csvkit
    pip: name='csvkit' executable='pip3' extra_args='--user'
    tags: ['usr', 'process']

  - name: install pandashells
    pip: name='pandashells' executable='pip3' extra_args='--user'
    tags: ['usr', 'process']

  - name: install percol
    pip: name='percol' executable='pip3' extra_args='--user'
    tags: ['usr', 'process']
 
  - name: create percol dir
    file: path='~/.percol.d/' state=directory
    tags: ['usr', 'process']

  - name: deploy percol conf
    file: src='{{playbook_dir}}/percol/rc.py' dest='~/.percol.d/rc.py' state=link force=yes
    tags: ['usr', 'process']

  - name: install pythonpy
    pip: name='pythonpy' executable='pip3' extra_args='--user'
    tags: ['usr', 'process']
# }}}
# DEVELOP{{{
  - name: install git
    package: name='git'
    tags: ['sys', 'develop']
    become: true

  - name: deploy git conf
    file: src='{{playbook_dir}}/git/gitconfig' dest='~/.gitconfig' state=link force=yes
    tags: ['usr', 'develop']

  - name: deploy git ignore
    file: src='{{playbook_dir}}/git/gitignore' dest='~/.gitignore' state=link force=yes
    tags: ['usr', 'develop']

  - name: install git project
    get_url: url='https://raw.githubusercontent.com/StreakyCobra/gws/master/src/gws' dest='~/bin/gws' mode='0700'
    tags: ['usr', 'develop']

  - name: install make
    package: name='make'
    tags: ['sys', 'develop']
    become: true
 
  - name: install autoenv
    pip: name='autoenv' executable='pip3' extra_args='--user'
    tags: ['usr', 'develop']

  - name: install watchdog
    pip: name='watchdog' executable='pip3' extra_args='--user'
    tags: ['usr', 'develop']

  - name: install cookiecutter
    pip: name='cookiecutter' executable='pip3' extra_args='--user'
    tags: ['usr', 'develop']

  - name: deploy cookiecutter conf
    file: src='{{playbook_dir}}/cookiecutter/cookiecutterrc' dest='~/.cookiecutterrc' state=link force=yes
    tags: ['usr', 'develop']
# }}}
